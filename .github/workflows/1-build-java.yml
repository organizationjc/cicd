name: 1 - Build Java

on:
  workflow_call:
    inputs:
      runs-on:
        type: string
        required: false
        default: 'ubuntu-latest'
      build-system:
        type: string
        required: true
      java-version:
        type: string
        required: true
      project-name:
        type: string
        required: true
    outputs:
      jar-file:
        value: ${{ jobs.build.outputs.jar-file }}
      war-file:
        value: ${{ jobs.build.outputs.war-file }}

jobs:
  build:
    runs-on: ${{ inputs.runs-on }}
    outputs:
      jar-file: ${{ steps.detect.outputs.jar-name }}
      war-file: ${{ steps.detect.outputs.war-name }}
    steps:
      - uses: actions/checkout@v4

      - name: Reusable inputs (debug)
        run: |
          echo "runs-on=${{ inputs.runs-on }}"
          echo "build-system=${{ inputs.build-system }}"
          echo "java-version=${{ inputs.java-version }}"
          echo "project-name=${{ inputs.project-name }}"
          
      - uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: ${{ inputs.java-version }}
          cache: ${{ inputs.build-system }}

      - name: Build (skip tests)
        shell: bash
        run: |
          if [ "${{ inputs.build-system }}" = "maven" ]; then
            mvn -B -ntp clean package -DskipTests
          else
            ./gradlew clean build -x test
          fi

      - name: Detect build artifacts (JAR/WAR)
        id: detect
        shell: bash
        run: |
          set -euo pipefail
          shopt -s globstar nullglob

          # Recolecta candidatos
          mapfile -t JAR_CANDS < <(printf '%s\0' target/*.jar **/build/libs/*.jar | xargs -0 -I{} echo {})
          mapfile -t WAR_CANDS < <(printf '%s\0' target/*.war **/build/libs/*.war | xargs -0 -I{} echo {})

          pick_preferred() {
            local kind="$1"; shift
            local -a arr=("$@")
            local preferred=""
            # 1) Preferir Spring Boot (boot/ spring-boot) si existe
            for f in "${arr[@]}"; do
              [[ "$f" =~ /boot[^/]*\.$kind$ || "$f" =~ /spring-boot[^/]*\.$kind$ ]] && { preferred="$f"; break; }
            done
            # 2) Si no, primero de la lista
            [[ -z "$preferred" && ${#arr[@]} -gt 0 ]] && preferred="${arr[0]}"
            echo "$preferred"
          }

          JAR_FILE="$(pick_preferred jar "${JAR_CANDS[@]-}")"
          WAR_FILE="$(pick_preferred war "${WAR_CANDS[@]-}")"

          # Exponer nombres (solo si existen)
          if [[ -n "${JAR_FILE:-}" ]]; then
            echo "jar-name=$(basename "$JAR_FILE")" >> "$GITHUB_OUTPUT"
          else
            echo "jar-name=" >> "$GITHUB_OUTPUT"
          fi

          if [[ -n "${WAR_FILE:-}" ]]; then
            echo "war-name=$(basename "$WAR_FILE")" >> "$GITHUB_OUTPUT"
          else
            echo "war-name=" >> "$GITHUB_OUTPUT"
          fi

          # Un pequeño log útil
          echo "JAR: ${JAR_FILE:-<none>}"
          echo "WAR: ${WAR_FILE:-<none>}"

      - name: Upload JAR artifact
        if: ${{ steps.detect.outputs.jar-name != '' }}
        uses: actions/upload-artifact@v4
        with:
          name: ${{ inputs.project-name }}-jar
          path: target/*.jar
          if-no-files-found: error

      - name: Upload WAR artifact
        if: ${{ steps.detect.outputs.war-name != '' }}
        uses: actions/upload-artifact@v4
        with:
          name: ${{ inputs.project-name }}-war
          path: target/*.war
          if-no-files-found: error

      # Opcional: subir binarios .class para que otras etapas (p.ej. Sonar) no tengan que recompilar
      - name: Upload Java binaries (classes)
        uses: actions/upload-artifact@v4
        with:
          name: java-binaries
          path: |
            target/classes/**
            **/target/classes/**
            build/classes/java/main/**
            **/build/classes/java/main/**
          if-no-files-found: ignore

